legend.text = element_text(size = 10)
)
kuchinski = import("PE_BD.xlsx")
kuchinski <- kuchinski %>%
mutate(tipo = case_when(
grepl("Reforma", Título, ignore.case = TRUE) ~ "REFORMA",
grepl("Ley", Título, ignore.case = TRUE) ~ "LEY",
TRUE ~ "OTRO"
))
library(dplyr)
library(stringr)
kuchinski <- kuchinski %>%
mutate(Objetivo = sapply(Título, asignar_objetivo))
kuchinski <- kuchinski %>%
mutate(Objetivo = if_else(tipo == "REFORMA", "MODIFICA", Objetivo))
kuchinski <- kuchinski %>%
mutate(Objetivo = ifelse(is.na(Objetivo), "OTRO", Objetivo))
kuchinski <- kuchinski %>%
mutate(Estado = ifelse(Estado %in% valores_permitidos, Estado, 'Otro'))
library(ggplot2)
library(dplyr)
library(RColorBrewer)
# Obtener los 6 objetivos con más valores
altitos <- kuchinski %>%
count(Objetivo) %>%
top_n(5, wt = n) %>%
pull(Objetivo)
# Filtrar los datos para incluir solo esos objetivos
cuysito <- kuchinski %>%
filter(Objetivo %in% altitos)
# Usar una paleta de colores de RColorBrewer
p <- length(altitos)
# Definir una paleta de colores personalizada con colores vibrantes
custom_palette <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2",
"#59A14F", "#EDC948", "#B07AA1", "#FF9DA7",
"#9C755F", "#BAB0AC")
# Usar solo los colores necesarios
color_palette <- custom_palette[1:p]
# Crear el gráfico
# Crear el gráfico
ggplot(cuysito, aes(x = Estado, fill = Objetivo)) +
geom_bar(position = "dodge") +
geom_text(aes(label = ..count..), stat = "count", position = position_dodge(width = 0.9), vjust = -0.5, size = 3) +
labs(
x = "Estado del Proyecto de Ley",
y = "Cantidad de Proyectos de Ley",
fill = "Objetivo del Proyecto de Ley",
title = "Proyectos de ley impulsados desde el Ejecutivo (2016-2019)",
subtitle = "Comisión de Descentralización"
) +
theme_bw() +
scale_fill_manual(values = color_palette) +
theme(
plot.title = element_text(size = 14, face = "bold"),
plot.subtitle = element_text(size = 12),  # Estilo del subtítulo
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10)
)
kuchinski$Presentación = as.factor(kuchinski$Presentación)
library(rio)
data = import("inversion_china_peru.xlsx")
data
str(data)
library(plotly)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
data <- data %>%
mutate(Month_Num = match(Month, month.name),  # Convertir nombre del mes a número
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d")) # Fecha solo para ordenar
# Crear gráfico de líneas
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, color = Type, group = Type,
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(size = 0.5, alpha = 0.8) +  # Línea más gruesa y con transparencia
geom_point(size = 1, alpha = 0.7) +  # Puntos más grandes y diferenciados por forma
labs(title = "Evolución Temporal de Inversión y Construcción",
x = "Año",
y = "Monto (millones de dólares)",
color = "Tipo") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Mostrar todos los años en el eje X
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_blank())  # Ocultar título de la leyenda
ggplotly(p3, tooltip = "text")
ggplotly(p3, tooltip = "text")
tabla_inversion <- data %>%
filter(Type == "Investment") %>%
group_by(Investor_Builder) %>%
summarise(Total_Investment = sum(Amount)) %>%
arrange(desc(Total_Investment))
tabla_inversion
sector_data <- data %>%
filter(Type == "Investment") %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))  # Calcular porcentaje
p4_plotly
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p4_plotly <- plot_ly(sector_data,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'label+percent',  # Dentro del gráfico: Sector y porcentaje
insidetextfont = list(color = '#FFFFFF'),  # Texto dentro del gráfico en blanco
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
margin = list(l = 50, r = 50, t = 50, b = 50))  # Ajusta márgenes para mejor visualización
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p4_plotly <- plot_ly(sector_data,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'label+percent',  # Dentro del gráfico: Sector y porcentaje
insidetextfont = list(color = '#FFFFFF'),  # Texto dentro del gráfico en blanco
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
margin = list(l = 50, r = 50, t = 50, b = 50))  # Ajusta márgenes para mejor visualización
p4_plotly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))  # Calcular porcentaje
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'label+percent',  # Dentro del gráfico: Sector y porcentaje
insidetextfont = list(color = '#FFFFFF'),  # Texto dentro del gráfico en blanco
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
margin = list(l = 50, r = 50, t = 50, b = 50))  # Ajusta márgenes para mejor visualización
p6_ly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))  # Calcular porcentaje
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'label+percent',  # Dentro del gráfico: Sector y porcentaje
insidetextfont = list(color = '#FFFFFF'),  # Texto dentro del gráfico en blanco
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
margin = list(l = 40, r = 50, t = 50, b = 50))  # Ajusta márgenes para mejor visualización
p6_ly
library(plotly)
library(dplyr)
# Crear subdata con totales por sector
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))  # Calcular porcentaje
# Paleta de colores sobria con buen contraste
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
# Crear gráfico interactivo mejorado
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'label+percent',  # Sector y porcentaje dentro del gráfico
insidetextfont = list(color = '#FFFFFF', size = 14),  # Texto interno más grande
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
margin = list(l = 80, r = 80, t = 80, b = 80),  # Márgenes más amplios
height = 600,  # Aumentar el tamaño del gráfico
width = 800,   # Aumentar el ancho para más espacio
uniformtext = list(minsize = 12, mode = "hide"))  # Ajuste automático del texto interno
# Mostrar el gráfico interactivo
p6_ly
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',  # Solo el porcentaje dentro del gráfico
insidetextfont = list(color = '#FFFFFF', size = 12),  # Texto interno más pequeño
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(orientation = "h", y = -0.2),  # Poner la leyenda debajo del gráfico
margin = list(l = 50, r = 50, t = 50, b = 100),  # Márgenes mejorados
height = 500,  # Tamaño más compacto
width = 700)  # Ancho adecuado para la leyenda
# Mostrar el gráfico interactivo
p6_ly
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',  # Solo el porcentaje dentro del gráfico
insidetextfont = list(color = '#FFFFFF', size = 12),  # Texto interno más claro
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1.1, y = 0.5),  # Leyenda a la derecha
margin = list(l = 50, r = 150, t = 50, b = 50),  # Más espacio a la derecha
height = 500,  # Tamaño compacto
width = 700)  # Ancho adecuado
# Mostrar el gráfico interactivo
p6_ly
tabla_inversion <- data %>%
group_by(Investor_Builder) %>%
summarise(Total_Investment = sum(Amount)) %>%
arrange(desc(Total_Investment))
tabla_inversion
data <- data %>%
mutate(Month_Num = match(Month, month.name),  # Convertir nombre del mes a número
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d")) # Fecha solo para ordenar
# Crear gráfico de líneas
p3 <- ggplot(data, aes(x = Year_Month, y = Amount,
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(size = 0.5, alpha = 0.8) +  # Línea más gruesa y con transparencia
geom_point(size = 1, alpha = 0.7) +  # Puntos más grandes y diferenciados por forma
labs(title = "Evolución Temporal de Inversión y Construcción",
x = "Año",
y = "Monto (millones de dólares)",
color = "Tipo") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Mostrar todos los años en el eje X
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_blank())  # Ocultar título de la leyenda
ggplotly(p3, tooltip = "text")
library(rio)
data = import("inversion_china_peru.xlsx")
data
str(data)
library(plotly)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
data <- data %>%
mutate(Month_Num = match(Month, month.name),  # Convertir nombre del mes a número
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))  # Crear fecha para ordenar
# Crear gráfico de líneas con color azul
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, group = 1,  # Agrupar para trazar la línea
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(color = "#4E79A7", size = 1, alpha = 0.8) +  # Línea azul más gruesa y con transparencia
geom_point(color = "#4E79A7", size = 2, alpha = 0.9) +  # Puntos azules más visibles
labs(title = "Evolución Temporal de Inversión y Construcción",
x = "Año",
y = "Monto (millones de dólares)") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Mostrar todos los años en el eje X
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas para mejor lectura
# Convertir a gráfico interactivo
ggplotly(p3, tooltip = "text")
data <- data %>%
mutate(Month_Num = match(Month, month.name),  # Convertir nombre del mes a número
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))  # Crear fecha para ordenar
# Crear gráfico de líneas con color azul
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, group = 1,  # Agrupar para trazar la línea
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(color = "#4E79A7", size = 0.8, alpha = 0.8) +  # Línea azul más gruesa y con transparencia
geom_point(color = "#4E79A7", size = 1, alpha = 0.9) +  # Puntos azules más visibles
labs(title = "Evolución Temporal de Inversión y Construcción",
x = "Año",
y = "Monto (millones de dólares)") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Mostrar todos los años en el eje X
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas para mejor lectura
# Convertir a gráfico interactivo
ggplotly(p3, tooltip = "text")
data <- data %>%
mutate(Month_Num = match(Month, month.name),  # Convertir nombre del mes a número
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))  # Crear fecha para ordenar
# Crear gráfico de líneas con color azul
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, group = 1,  # Agrupar para trazar la línea
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(color = "#4E79A7", size = 0.8, alpha = 0.8) +  # Línea azul más gruesa y con transparencia
geom_point(color = "#4E79A7", size = 1, alpha = 0.9) +  # Puntos azules más visibles
labs(title = "Evolución Temporal de Inversión china",
x = "Año",
y = "Monto (millones de dólares)") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +  # Mostrar todos los años en el eje X
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Inclinar etiquetas para mejor lectura
# Convertir a gráfico interactivo
ggplotly(p3, tooltip = "text")
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))  # Calcular porcentaje
# Paleta de colores sobria y con buen contraste
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
# Crear gráfico interactivo mejorado
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',  # Solo el porcentaje dentro del gráfico
insidetextfont = list(color = '#FFFFFF', size = 12),  # Texto interno más claro
hoverinfo = 'label+value+percent',  # Tooltip: Sector, monto exacto y porcentaje
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1.1, y = 0.5),  # Leyenda a la derecha
margin = list(l = 50, r = 150, t = 50, b = 50),  # Más espacio a la derecha
height = 500,  # Tamaño compacto
width = 700)  # Ancho adecuado
# Mostrar el gráfico interactivo
p6_ly
install.packages("DT")
setwd("C:/Users/Romina/Documents/GitHub/china_investment")
library(flexdashboard)
library(rio)
library(plotly)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(DT)
data <- data %>%
group_by(Year, Month) %>%
summarise(Amount = sum(Amount, na.rm = TRUE)) %>%
ungroup() %>%
mutate(Month_Num = match(Month, month.name),
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))
library(flexdashboard)
library(rio)
library(plotly)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(DT)
data <- import("inversion_china_peru.xlsx")
datatable(data, options = list(
pageLength = 10,
scrollX = TRUE
))
data <- data %>%
group_by(Year, Month) %>%
summarise(Amount = sum(Amount, na.rm = TRUE)) %>%
ungroup() %>%
mutate(Month_Num = match(Month, month.name),
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, group = 1,
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(color = "#4E79A7", size = 0.8, alpha = 0.8) +
geom_point(color = "#4E79A7", size = 1, alpha = 0.9) +
labs(title = "Evolución Temporal de la Inversión China",
x = "Año",
y = "Monto (millones de dólares)") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p3, tooltip = "text")
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
View(data)
library(flexdashboard)
library(rio)
library(plotly)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(DT)
data <- import("inversion_china_peru.xlsx")
datatable(data, options = list(
pageLength = 10,
scrollX = TRUE
))
data <- data %>%
group_by(Year, Month) %>%
mutate(Total_Amount = sum(Amount, na.rm = TRUE)) %>%
ungroup() %>%
mutate(Month_Num = match(Month, month.name),
Year_Month = as.Date(paste(Year, Month_Num, "01", sep = "-"), "%Y-%m-%d"))
p3 <- ggplot(data, aes(x = Year_Month, y = Amount, group = 1,
text = paste("Año:", Year, "<br>Mes:", Month, "<br>Monto:", Amount, "millones USD"))) +
geom_line(color = "#4E79A7", size = 0.8, alpha = 0.8) +
geom_point(color = "#4E79A7", size = 1, alpha = 0.9) +
labs(title = "Evolución Temporal de la Inversión China",
x = "Año",
y = "Monto (millones de dólares)") +
theme_minimal() +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplotly(p3, tooltip = "text")
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF', size = 12),
hoverinfo = 'label+value+percent',
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1.1, y = 0.5),
margin = list(l = 50, r = 150, t = 50, b = 50),
height = 600,
width = 1000)
p6_ly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF', size = 12),
hoverinfo = 'label+value+percent',
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1.2, y = 0.5, font = list(size = 12)), # Mueve la leyenda más a la derecha
margin = list(l = 50, r = 250, t = 50, b = 50), # Aumenta margen derecho
height = 600,
width = 1000)
p6_ly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF', size = 12),
hoverinfo = 'label+value+percent',
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1, y = 0.5, font = list(size = 12)), # Asegura que la leyenda quede alineada al costado
margin = list(l = 50, r = 300, t = 50, b = 50), # Amplía el margen derecho sin cortar el gráfico
height = 600,
width = 1100) # Aumenta el ancho para dar espacio a la leyenda
p6_ly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF', size = 12),
hoverinfo = 'label+value+percent',
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1.1, y = 0.5),
margin = list(l = 50, r = 150, t = 50, b = 50),
height = 600,
width = 1000)
p6_ly
p_tota <- data %>%
group_by(Sector) %>%
summarise(Total = sum(Amount, na.rm = TRUE)) %>%
mutate(Percentage = round(100 * Total / sum(Total), 1))
colores_sobrios <- c("#4E79A7", "#F28E2B", "#E15759", "#76B7B2", "#59A14F", "#EDC949", "#B07AA1")
p6_ly <- plot_ly(p_tota,
labels = ~Sector,
values = ~Total,
type = 'pie',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF', size = 12),
hoverinfo = 'label+value+percent',
marker = list(colors = colores_sobrios,
line = list(color = '#FFFFFF', width = 1))) %>%
layout(title = "Distribución de la Inversión China por Sector",
showlegend = TRUE,
legend = list(x = 1, y = 0.5),
margin = list(l = 50, r = 150, t = 50, b = 50),
height = 600,
width = 1000)
p6_ly
